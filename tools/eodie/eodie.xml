<tool id="eodie" name="EODIE" version="@VERSION@">
    <description>converts simple features data between file formats</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="edam_ontology"/>
    <requirements>
        <requirement type="package" version="3.9">python</requirement>
        <requirement type="package" version="1.8">shapely</requirement>
        <requirement type="package" version="1.2">rasterio</requirement>
        <requirement type="package" version="0.16">rasterstats</requirement>
        <requirement type="package" version="1.8">fiona</requirement>
        <requirement type="package" version="1.21">numpy</requirement>
        <requirement type="package" version="3.4.0">gdal</requirement>
        <requirement type="package" version="6.0">pyyaml</requirement>
        <requirement type="package" version="1.0.0">eodie</requirement>
        <requirement type="package" version="6.0">unzip</requirement>
        <requirement type="package" version="1.34">tar</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
       mkdir -p work/data_collection work/results results_csv results_tiffs &&
       cp '$config_tif' config_tif.yml && 
       cp '$config_s2'  config_s2.yml  && 
       cp '$config_ls8' config_ls8.yml && 
       cp '$user_config' user_config.yml && 
       cp ${input.extra_files_path}/*  work/ &&
       cd work &&
       ln -s ${input_type.input_file}  ${input_type.input_file.element_identifier} &&
       #if $input_type.input_file.is_of_type("zip")
           unzip '$input_type.input_file' -d data_collection/    &&
       #elif $input_type.input_file.is_of_type("tar")
           tar -xf '$input_type.input_file' -C data_collection   &&
       #end if
       #if str($input_type.platform) == 's2'
           mkdir -p sentinel2_tiles_world &&
           cp '$input_type.s2_shp.extra_files_path'/* sentinel2_tiles_world/  &&
       #end if
       eodie_process.py --platform 'tif'
           #if str($input_type.platform) == 'tif'
               --file ${input_type.input_file.element_identifier}
	   #else
               --dir data_collection
	   #end if
	   --shp shapefile
	   #if $adv_options.stats and str($adv_options.stats) != '':
               --statistics_out
	       --statistics 
	       #for $stat in str($adv_options.stats).split(','):
	           '$stat'
	       #end for
	   #end if
	   #if $adv_options.indices and str($adv_options.indices) != '':
	       --index 
	       #for $idx in str($adv_options.indices).split(','):
	           '$idx'
	       #end for
	   #end if
	   #if $adv_options.start_date and str($adv_options.start_date) != '':
               --start int($adv_options.start_date)
	   #end if
	   #if $adv_options.end_date and str($adv_options.end_date) != '':
               --start int($adv_options.end_date)
	   #end if
	   $adv_options.exclude_border 
	   $adv_options.exclude_splitshp 
           --id '$identifier'  &&
       mv results/*.log '$logfile'  &&
       mv results/*.csv ../results_csv/  &&
       echo "EODIE data extractor is done"
    ]]></command>
    <expand macro="configfiles"/>
    <inputs>
        <conditional name="input_type">
            <param name="platform" type="select" label="Select platform of the input data">
                <option value="s2">Sentinel 2</option>
                <option value="ls8">Landsat 8</option>
                <option value="tif">tif file</option>
            </param>
            <when value="tif">
                <param name='input_file' format="tiff" type="data" label="Individual input file"/>
            </when>
            <when value="ls8">
                <param name="input_file" type="data" format='zip,tar' label="Landsat 8 input data (zip or tarball)" />
            </when>
            <when value="s2">
                <param name="input_file" type="data" format='zip,tar' label="Sentinel 2 input data (zip or tarball)" />
                <param type="data" name="s2_shp" format="shp" label="Sentinel-2 tile shapefile" help="Provide the Sentinel-2 tile shapefile"/>
            </when>
        </conditional>
        <param type="data" name="input" format="shp" label="Shapefile with polygons" help="Provide shapefile with polygons"/>
        <param name="identifier" type="text" value="PlotID" label="Name of identifier" />
        <section name="adv_options" title="Advanced options" expanded="false">
            <param name="start_date" type="text" optional="true" label="Time frame start date (YYYYMMDD)">
                <validator type="length" min="8" max="8" message="Please enter a date YYYYMMDD"/>
            </param>
            <param name="end_date" type="text" optional="true" label="Time frame end date (YYYYMMDD)">
                <validator type="length" min="8" max="8" message="Please enter a date YYYYMMDD"/>
            </param>
	    <param name="stats" label="Statistics" type="select" multiple="true">
                <option value="mean">Mean</option>
                <option value="sum">Sum</option>
                <option value="min">Minimum</option>
                <option value="max">Maximum</option>
                <option value="std">Standard deviation</option>
                <option value="median">Median</option>
                <option value="majority">Majority</option>
                <option value="minority">Minority</option>
                <option value="unique">Unique</option>
                <option value="range">Range</option>
                <option value="percentile">Percentile</option>
	    </param>
            <param name="p_value" type="integer" value="0" min="0" max="100" label="percentile value (if percentile selected)" />
	    <param name="indices" label="Indice to compute" type="select" multiple="true">
                <option value="ndvi">ndvi</option>
                <option value="rvi">rvi</option>
                <option value="savi">savi</option>
                <option value="nbr">nbr</option>
                <option value="kndvi">kndvi</option>
                <option value="ndmi">ndmi</option>
                <option value="mndwi">mndwi</option>
	        <option value="evi">evi</option> 
	        <option value="evi2">evi2</option>
	        <option value="dvi">dvi</option> 
	        <option value="cvi">cvi</option>
	        <option value="mcar">mcar</option>
                <option value="ndi45">ndi45</option> 
                <option value="tctb">tctb</option>
	        <option value="tctg">tctg</option>
                <option value="tctw">tctw</option>
                <option value="ndwi">ndwi</option>
                <option value="B02">B02</option>
	        <option value="B03">B03</option>
	        <option value="B04">B04</option>
	        <option value="B05">B05</option>
	        <option value="B06">B06</option>
	        <option value="B07">B07</option>
	        <option value="B08">B08</option>
	        <option value="B8A">B8A</option> 
	        <option value="B11">B11</option>
	        <option value="B12">B12</option>
            </param>
            <param name="exclude_splitshp" type="boolean" checked="false" label="exclude splitshp" help="Flag to indicate that splitshp has been run manually beforehand" truevalue="--exclude_splitshp" falsevalue="" />
            <param name="exclude_border" type="boolean" checked="false" label="exclude border" help="Flag to indicate that border pixels (within the polygon) should be excluded from statistics calculations / array extraction" truevalue="--exclude_border" falsevalue="" />
        </section>
    </inputs>
    <outputs>
        <data name="logfile" format="txt"/>
        <collection name="csv_files" type="list" label="${tool.name} (statistics csv outputs)">
            <discover_datasets pattern="__name__" directory="results_csv" visible="false" format="csv"/>
        </collection>
    </outputs>
    <tests>
        <test>
            <conditional name="input_type">
                <param name="platform" value="tif" />
                <param name="input_file" ftype="tiff" value="smaller_area_20100401.tif" />
            </conditional>
            <param name="input" value="test_polygons/test_polygons.html" ftype="shp">
                <composite_data value="test_polygons/test_polygons.shp"/>
                <composite_data value="test_polygons/test_polygons.shx"/>
                <composite_data value="test_polygons/test_polygons.dbf"/>
                <composite_data value="test_polygons/test_polygons.prj"/>
            </param>
            <param name="identifier" value="id"/>
            <section name="adv_options">
		    <param name="exclude_splitshp" value="true"/>
            </section>
            <output file="20211213-104427.log" name="logfile" compare="sim_size" delta="1000"/> 
            <output_collection name="csv_files" type="list">
                <element name="testrgb_20100401__statistics.csv" ftype="csv" file="testrgb_20100401__statistics.csv" compare="sim_size" delta="100">
                </element>
            </output_collection>
        </test>
    </tests>
    <help><![CDATA[
**EODIE - Earth Observation Data Information Extractor**
=======================================================================================================

Toolkit to extract object based timeseries from Sentinel-2 data

Example:

python splitshp_world.py ...

python splitshp_mp.py $dir/example_parcels.shp $dir/Fin_s2.shp $dir/shp

python process.py --dir $dir/S2 --shp $dir/shp/example_parcels --out $dir/results --id PlotID
    ]]></help>
</tool>
