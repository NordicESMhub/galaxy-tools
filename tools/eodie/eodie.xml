<tool id="eodie" name="EODIE" version="@TOOL_VERSION@">
    <description>The Earth Observation Data Information Extractor is a toolkit to extract object based timeseries information from Earth Observation data.</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="3.9">python</requirement>
        <requirement type="package" version="1.8">shapely</requirement>
        <requirement type="package" version="1.2">rasterio</requirement>
        <requirement type="package" version="0.16">rasterstats</requirement>
        <requirement type="package" version="1.8">fiona</requirement>
        <requirement type="package" version="1.21">numpy</requirement>
        <requirement type="package" version="3.4.0">gdal</requirement>
        <requirement type="package" version="6.0">pyyaml</requirement>
        <requirement type="package" version="1.0.0">eodie</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
       mkdir -p work/results work/results_csv work/results_tiffs &&
       cp '$config_tif' config_tif.yml && 
       cp '$config_s2'  config_s2.yml  && 
       cp '$config_ls8' config_ls8.yml && 
       cp '$user_config' user_config.yml && 
       cd work &&
       cp $input_type.input_file  smaller_area_20100401.tif &&
       mkdir -p test_polygons &&
       cp '$shapefile.extra_files_path'/*.prj test_polygons.prj && 
       cp '$shapefile.extra_files_path'/*.shp test_polygons.shp && 
       cp '$shapefile.extra_files_path'/*.dbf test_polygons.dbf && 
       cp '$shapefile.extra_files_path'/*.shx test_polygons.shx && 
       eodie_process.py --platform $input_type.platform 
           #if str($input_type.platform) == 'tif'
               --file smaller_area_20100401.tif
           #else
               --dir data_collection
           #end if
           --shp test_polygons
           --id '$identifier' 
           --statistics_out
           --statistics 'mean' 'std' 'median' 
           --exclude_splitshp &&
       mv results/*.log '$logfile'  &&
       mv results/*.csv results_csv/  &&
       echo "EODIE data extractor is done"
    ]]></command>
    <expand macro="configfiles"/>
    <inputs>
        <conditional name="input_type">
            <param name="platform" type="select" label="Select platform of the input data">
                <option value="s2">Sentinel 2</option>
                <option value="ls8">Landsat 8</option>
                <option value="tif">tif file</option>
            </param>
            <when value="tif">
                <param name='input_file' format="tiff" type="data" label="Individual input file"/>
            </when>
            <when value="ls8">
                <repeat name="list_input_files" title="Input datasets" min="1">
                    <param name='input_file' format="binary" type="data_collection" collection_type="list" multiple="true" label="Individual input files list"/>
               </repeat>
            </when>
            <when value="s2">
                <repeat name="list_input_files" title="Input datasets" min="1">
                    <param name='input_file' format="binary" type="data_collection" collection_type="list" multiple="true" label="Individual input files list"/>
               </repeat>
            </when>
        </conditional>
        <param name="shapefile" type="data" format="shp" label="shapefile with polygons"/>
        <param name="identifier" type="text" value="PlotID" label="Name of identifier" />
        <section name="adv_period" title="Advanced options" expanded="false">
            <param name="start_date" type="text" value="" label="Time frame start date (YYYY-MM-DD)" />
            <param name="end_date" type="text" value="" label="Time frame end date (YYYY-MM-DD)" />
	    <param name="stats" label="Statistics" type="select" multiple="true">
                <option value="mean">Mean</option>
                <option value="min">Minimum</option>
                <option value="max">Maximum</option>
                <option value="std">Standard deviation</option>
                <option value="median">Median</option>
            </param>
            <conditional name="condi_type_run">
	        <param name="indices" label="Indice to compute" type="select">
                    <option value="ndvi">NDVI</option>
                    <option value="custom">User defined</option>
                </param>
		<when value="ndvi" />
		<when value="custom">
                    <param name="custom_indice" type="text" value="" label="Custom indice" />
                </when>
            </conditional>
        </section>

    </inputs>
    <outputs>
        <data name="logfile" format="txt"/>
        <collection name="csv_files" type="list" label="${tool.name} (statistics csv outputs)">
            <discover_datasets pattern="__name__" directory="results_csv" visible="false" format="csv"/>
        </collection>
        <collection name="tiff_files" type="list" label="${tool.name} (geotiff outputs)">
            <discover_datasets pattern="__name__" directory="results_tiffs" visible="false" format="tiff"/>
        </collection>
    </outputs>
    <tests>
        <test>
            <conditional name="input_type">
                <param name="platform" value="tif" />
                <param name="input_file" ftype="tiff" value="smaller_area_20100401.tif" />
                <param name="shapefile" value="test_polygons/test_polygons.html" ftype="shp" >
                    <composite_data value="test_polygons/test_polygons.shp"/>
                    <composite_data value="test_polygons/test_polygons.shx"/>
                    <composite_data value="test_polygons/test_polygons.dbf"/>
                    <composite_data value="test_polygons/test_polygons.prj"/>
                </param>
                <param name="identifier" value="id"/>
            </conditional>
        </test>
    </tests>
    <help><![CDATA[

**EODIE - Earth Observation Data Information Extractor**
=======================================================================================================

Toolkit to extract object based timeseries from Sentinel-2 data

Example:

python splitshp_world.py ...

python splitshp_mp.py $dir/example_parcels.shp $dir/Fin_s2.shp $dir/shp

python process.py --dir $dir/S2 --shp $dir/shp/example_parcels --out $dir/results --id PlotID

    ]]></help>
    <citations>

    </citations>
    <edam_topics>
      <edam_topic>topic_3855</edam_topic>
      <edam_topic>topic_3318</edam_topic>
    </edam_topics>
    <edam_operations>
      <edam_operation>operation_2422</edam_operation>
      <edam_operation>operation_3357</edam_operation>
      <edam_operation>operation_0335</edam_operation>
    </edam_operations>
</tool>
