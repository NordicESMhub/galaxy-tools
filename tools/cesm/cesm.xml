<tool id="cesm" name="CESM" version="2.1.3">
    <description>Community Earth System Model</description>
    <requirements>
        <requirement type="package" version="2.1.3">cesm</requirement>
        <requirement type="package" version="1.32">tar</requirement>
        <requirement type="package" version="2.35">binutils</requirement>
        <requirement type="package" version="3">python</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        export HOME=`pwd` &&
        export USER='jovyan' &&
        export AR=x86_64-conda_cos6-linux-gnu-ar &&
        mkdir -p .cime &&
        cp '$__tool_directory__/config' .cime/config &&
        cp '$__tool_directory__/config_compilers.xml' '.cime/config_compilers.xml' &&
        cp '$__tool_directory__/config_machines.xml' '.cime/config_machines.xml' &&
        mkdir inputdata &&
        mkdir output_dir &&
        mkdir logs_dir &&
        mkdir usermods_dirs &&
        #if $input_type.tarball
            tar -xf '$input_type.inputdata' -C 'inputdata/' &&
        #else
            #for $input_file in $input_type.input_data_collection
                bash $__tool_directory__/create_mapping.sh ${input_file} ${input_file.name} '$mapping' &&
            #end for
        #end if
        #if str($adv.condi_user_mods).strip() == 'yes'
            # should create a new type user_mods.tar
            cd usermods_dirs &&
            tar xf '$user_mods' &&
            cd .. &&
        #end if
        create_newcase --case '$casename' --compset '$condi_type_run.compset' --machine galaxy 
        #if str($adv.condi_user_mods).strip() == 'yes'
            --user-mods-dir usermods_dirs
        #end if
            --res '$condi_type_run.resolution'  > $case_info  2>&1 && 
        cd '$casename' &&
        ./case.setup  >> $case_info  2>&1   &&
        #if (str($adv_period.condi_type_run.run_type) == 'hybrid' or str($adv_period.condi_type_run.run_type) == 'branch')
            ./xmlchange RUN_TYPE=$adv_period.condi_type_run.run_type &&
            ./xmlchange RUN_REFDATE=$adv_period.condi_type_run.run_refdate &&
            ./xmlchange RUN_REFCASE=$adv_period.condi_type_run.run_refcase &&
        #end if
        #if ((str($adv_period.condi_type_run.run_type) == 'hybrid' or str($adv_period.condi_type_run.run_type) == 'startup') and ($adv_period.condi_type_run.run_startdate != ''))
            ./xmlchange RUN_STARTDATE=$adv_period.condi_type_run.run_startdate &&
        #end if
        ./xmlchange STOP_N=$adv_period.stopn &&
        ./xmlchange STOP_OPTION=$adv_period.stop_option &&
        ./xmlchange DOUT_S=FALSE &&
        #if (str($adv_restart.restart_option) != 'unset')
            ./xmlchange REST_N=$adv_restart.restn &&
            ./xmlchange REST_OPTION=$adv_restart.restart_option &&
        #end if
        #if ($adv_restart.interim_files)
            ./xmlchange DOUT_S_SAVE_INTERIM_RESTART_FILES=TRUE
        #end if
        #if (str($adv_lnd.user_nl_lnd_customization) != 'None')
            cp '$adv_lnd.user_nl_lnd_customization' user_nl_lnd &&
        #end if
        #if (str($adv_atm.user_nl_atm_customization) != 'None')
            cp '$adv_atm.user_nl_atm_customization' user_nl_atm &&
        #end if
        #if (str($adv_rof.user_nl_rof_customization) != 'None')
            cp '$adv_rof.user_nl_rof_customization' user_nl_rof &&
        #end if
        #if (str($adv_glc.user_nl_glc_customization) != 'None')
            cp '$adv_glc.user_nl_glc_customization' user_nl_cism &&
        #end if
        #if (str($adv_ocn.user_nl_ocn_customization) != 'None')
            cp '$adv_ocn.user_nl_ocn_customization' user_nl_ocn &&
        #end if
        #if (str($adv_ice.user_nl_ice_customization) != 'None')
            cp '$adv_ice.user_nl_ice_customization' user_nl_ice &&
        #end if
        #for $i in $adv_lnd.inputs
            ln -s '${i.input}' str(${i.input.element_identifier})
        #end for
        #for $i in $adv_atm.inputs
            ln -s '${i.input}' str(${i.input.element_identifier})
        #end for
        #for $i in $adv_rof.inputs
            ln -s '${i.input}' str(${i.input.element_identifier})
        #end for
        #for $i in $adv_glc.inputs
            ln -s '${i.input}' str(${i.input.element_identifier})
        #end for
        #for $i in $adv_ocn.inputs
            ln -s '${i.input}' str(${i.input.element_identifier})
        #end for
        #for $i in $adv_ice.inputs
            ln -s '${i.input}' str(${i.input.element_identifier})
        #end for
        ./case.build >> $case_info  2>&1 &&
        #if (str($adv_period.condi_type_run.run_type) == 'hybrid' or str($adv_period.condi_type_run.run_type) == 'branch')
            tar -xf '$adv_period.condi_type_run.restart' -C '../work/$casename/run/' && 
        #end if
        ( ./case.submit >> $case_info  2>&1 || true ) &&
        (grep "MODEL EXECUTION HAS FINISHED" $case_info || ( echo "Case failed" && cd .. && tar cf $work work && exit 1 )) &&
        echo "CURRENT PATH" &&
        echo "\$HOME"       &&
        cd "\$HOME"         && 
        mkdir -p restart                              &&
        ( cat 'work/$casename/run/rpointer'.* > $rinfo || echo "No restarts\n" ) &&
        ( cp 'work/$casename/run/$casename'.*.r*.*.nc restart/ || echo "No netCDF restarts\n" ) &&
        ( cp 'work/$casename/run/$casename'.*.r*.*.bin restart/ || echo "No bin restarts\n" )   &&
        ( cp 'work/$casename/run/rpointer'.* restart/ || echo "no rpointer\n" ) &&
        cd restart && 
        tar cvf $restart . &&
        cd "\$HOME"        && 
        ( cp 'work/$casename/run/$casename'.*.h*.*.nc output_dir/ || echo "no netCDF outputs\n" ) &&
        ( gunzip 'work/$casename/run/'*.log.* || echo "no compressed logs" ) && 
        ( cat 'work/$casename/run/'atm.log.* > logs_dir/atm_log.txt || echo "No atm logfile" )  &&
        ( cat 'work/$casename/run/'cesm.log.* > logs_dir/cesm_log.txt || echo "No cesm logfile" ) &&
        ( cat 'work/$casename/run/'cpl.log.* > logs_dir/cpl_log.txt || echo "No cpl logfile" )  &&
        ( cat 'work/$casename/run/'lnd.log.* > logs_dir/lnd_log.txt || echo "No lnd logfile" )  &&
        ( cat 'work/$casename/run/'rof.log.* > logs_dir/rof_log.txt || echo "No rof logfile" )  &&
        tar cf $work work  &&
        echo "MODEL RUN COMPLETED"
    ]]></command>
    <inputs>
        <conditional name="input_type">
            <param name="tarball" type="boolean" value="false" label="Provide inputdata as a tarball"/>
            <when value="true">
                <param name="inputdata" type="data" format='tar' label="inputdata for running CESM (tarball)"></param>
            </when>
            <when value="false">
                <param name="input_data_collection" format="netcdf" type="data_collection" collection_type="list" label="Select input data" help="Select all the netCDF files you would need for running the chosen compset and resolution"/>
                <param name="mapping" type="data" format='txt' label="Text file for mapping files in inputdata collection to physical files"/>
            </when> 
        </conditional>
        <param name="casename" type="text" value="usecase" label="Name of your case">
            <validator type="regex" message="start with a letter and no blanks">^[A-Za-z][A-Za-z0-9]*</validator>
        </param>
        <conditional name="condi_type_run">
            <param name="compset" type="select" label="Model compset">
                <option value="FKESSLER">FKESSLER</option>
                <option value="F2000climo">F2000climo</option>
                <option value="QPC6">QPC6</option>
                <option value="QSC6">QSC6</option>
                <option value="F1850">F1850</option>
                <option value="FHIST">FHIST</option>
                <option value="B1850">B1850</option>
                <option value="BHIST">BHIST</option>
            </param>
            <when value="FKESSLER">
                <param name="resolution" type="select" label="Model resolution">
                    <option value="f09_f09_mg17">f09_f09_mg17</option>
                    <option value="f19_f19_mg17">f19_f19_mg17</option>
                </param>
            </when>
            <when value="F2000climo">
                <param name="resolution" type="select" label="Model resolution">
                    <option value="f09_f09_mg17">f09_f09_mg17</option>
                    <option value="f19_g17 --run-unsupported">f19_g17</option>
                    <option value="f19_f19_mg17 --run-unsupported">f19_f19_mg17</option>
                </param>
            </when>
            <when value="QPC6">
                <param name="resolution" type="select" label="Model resolution">
                    <option value="f09_f09_mg17">f09_f09_mg17</option>
                    <option value="f19_f19_mg17">f19_f19_mg17</option>
                </param>
            </when>
            <when value="QSC6">
                <param name="resolution" type="select" label="Model resolution">
                    <option value="f09_f09_mg17">f09_f09_mg17</option>
                    <option value="f19_f19_mg17">f19_f19_mg17</option>
                </param>
            </when>
            <when value="F1850">
                <param name="resolution" type="select" label="Model resolution">
                    <option value="f19_f19_mg17 --run-unsupported"></option>
                </param>
            </when>
            <when value="B1850">
                <param name="resolution" type="select" label="Model resolution">
                    <option value="f09_g17_gl4">f09_g17_gl4</option>
                    <option value="f09_g17">f09_g17</option>
                    <option value="f19_g17_gl4">f19_g17_gl4</option>
                    <option value="f19_g17">f19_g17</option>
                </param>
            </when>
            <when value="BHIST">
                <param name="resolution" type="select" label="Model resolution">
                    <option value="f09_g17_gl4">f09_g17_gl4</option>
                    <option value="f09_g17">f09_g17</option>
                    <option value="f19_g17_gl4">f19_g17_gl4</option>
                    <option value="f19_g17">f19_g17</option>
                </param>
            </when>
	</conditional>
        <section name="adv_period" title="Customize the model run period" expanded="false">

            <conditional name="condi_type_run">
                <param name="run_type" type="select" label="Determines the model run initialization type.">
                    <option value="startup" selected="true">startup</option>
                    <option value="hybrid">hybrid</option>
                    <option value="branch">branch</option>
                </param>
                <when value="startup">
                    <param name="run_startdate" type="text" value="" label="Run start date (yyyy-mm-dd). Only used for startup or hybrid runs.">
                       <validator type="regex" message="YYYY-MM-DD">(^$|(\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])))</validator>
                    </param>
                </when>
                <when value="branch">
                    <param name="run_refcase" type="text" value="" label="Reference case for hybrid or branch runs"/>
                    <param name="run_refdate" type="text" value="" label="Reference date for hybrid or branch runs (yyyy-mm-dd)">
                       <validator type="regex" message="YYYY-MM-DD">(^$|(\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])))</validator>
                    </param>
                    <param name="restart" type="data" format='tar' label="restart for running CESM"/>
                </when>
                <when value="hybrid">
                    <param name="run_refcase" type="text" value="" label="Reference case for hybrid or branch runs"/>
                    <param name="run_refdate" type="text" value="" label="Reference date for hybrid or branch runs (yyyy-mm-dd)">
                       <validator type="regex" message="YYYY-MM-DD">(^$|(\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])))</validator>
                    </param>
                    <param name="run_startdate" type="text" value="" label="Run start date (yyyy-mm-dd). Only used for startup or hybrid runs.">
                       <validator type="regex" message="YYYY-MM-DD">(^$|(\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])))</validator>
                    </param>
                    <param name="restart" type="data" format='tar' label="restart for running CESM"/>
                </when>
            </conditional>
            <param name="stopn" type="integer" value="5" label="Provides a numerical count for STOP_OPTION."/>
            <param name="stop_option" type="select" label=" Sets the run length along with STOP_N and STOP_DATE">
                <option value="ndays" selected="true">ndays</option>
                <option value="none">none</option>
                <option value="never">never</option>
                <option value="nsteps">nsteps</option>
                <option value="nseconds">nseconds</option>
                <option value="nminutes">nminutes</option>
                <option value="nhours">nhours</option>
                <option value="nday">ndays</option>
                <option value="nmonths">nmonths</option>
                <option value="nyears">nyears</option>
                <option value="date">date</option>
                <option value="ifdays0">ifday0</option>
                <option value="end">end</option>
            </param>
        </section>
        <section name="adv_restart" title="Customize the model restart period" expanded="false">
            <param name="restn" type="integer" value="12" label="Provides a numerical count for RESTART_OPTION (only if REST_N is different from 'unset')."/>
            <param name="restart_option" type="select" label="Sets frequency of model restart writes in conjuction with REST_N (default is 'unset' e.g. STOP_N and STOP_OPTION)">
                <option value="unset" selected="true">unset</option>
                <option value="ndays">ndays</option>
                <option value="none">none</option>
                <option value="never">never</option>
                <option value="nsteps">nsteps</option>
                <option value="nseconds">nseconds</option>
                <option value="nminutes">nminutes</option>
                <option value="nhours">nhours</option>
                <option value="nday">ndays</option>
                <option value="nmonths">nmonths</option>
                <option value="nyears">nyears</option>
                <option value="date">date</option>
                <option value="ifdays0">ifday0</option>
                <option value="end">end</option>
            </param>
            <param name="interim_files" type="boolean" value="false" label=""/>
        </section>
        
        <section name="adv_lnd" title="Land namelist user customization" expanded="false">
            <param name="user_nl_lnd_customization" type="data" format="txt" optional="true" label="LAND User namelist (lnd_in)"/>
            <repeat name="inputs" title="Land Customized Input Files">
               <param name="input" type="data" format="netcdf" label="Input for LND component"/>
            </repeat>
        </section>
        <section name="adv_rof" title="River-runoff namelist user customization" expanded="false">
            <param name="user_nl_rof_customization" type="data" format="txt" optional="true" label="ROF User namelist (rof_in)"/>
            <repeat name="inputs" title="River-runoff Customized Input Files">
               <param name="input" type="data" format="netcdf" label="Input for ROF component"/>
            </repeat>
        </section>
        <section name="adv_atm" title="Atmopshere namelist user customization" expanded="false">
            <param name="user_nl_atm_customization" type="data" format="txt" optional="true" label="ATM User namelist (atm_in)"/>
            <repeat name="inputs" title="River-runoff Customized Input Files">
               <param name="input" type="data" format="netcdf" label="Input for ATM component"/>
            </repeat>
        </section>
        <section name="adv_glc" title="Land-ice namelist user customization" expanded="false">
            <param name="user_nl_glc_customization" type="data" format="txt" optional="true" label="CISM User namelist (cism_in)"/>
            <repeat name="inputs" title="Land-ice Customized Input Files">
               <param name="input" type="data" format="netcdf" label="Input for GLC component"/>
            </repeat>
        </section>
        <section name="adv_ice" title="Sea-ice namelist user customization" expanded="false">
            <param name="user_nl_ice_customization" type="data" format="txt" optional="true" label="ICE User namelist (ice_in)"/>
            <repeat name="inputs" title="Sea-ice Customized Input Files">
               <param name="input" type="data" format="netcdf" label="Input for ICE component"/>
            </repeat>
        </section>
        <section name="adv_ocn" title="Ocean namelist user customization" expanded="false">
            <param name="user_nl_ocn_customization" type="data" format="txt" optional="true" label="OCN User namelist (ocn_in)"/>
            <repeat name="inputs" title="Ocean Customized Input Files">
               <param name="input" type="data" format="netcdf" label="Input for OCN component"/>
            </repeat>
        </section>
        <section name="adv" title="Advanced User customization" expanded="false">
            <conditional name="condi_user_mods">
                <param name="add_changes" type="boolean" value="false" label="user-modified source code"/> 
                <when value="true">
                    <param name="usermods" type="data" format="tar" label="SourceMods"/>
               </when>
               <when value="false"/>
            </conditional>
        </section>
    </inputs>
    <outputs>
        <data name="work" format="tar" label="${tool.name} on ${casename} (workdir)"/>
        <data name="restart" format="tar" label="${tool.name} on ${casename} (restart)"/>
        <data name="rinfo" format="txt" label="${tool.name} on ${casename} (restart info)"/>
        <data name="case_info" format="txt" label="${tool.name} on ${casename} (case info)"/>
        <collection name="logs_files" type="list" label="${tool.name} on ${casename} (logfiles)">
            <discover_datasets pattern="__name__" directory="logs_dir" visible="false" format="txt"/>
        </collection>
        <collection name="history_files" type="list" label="${tool.name} on ${casename} (history file)">
            <discover_datasets pattern="__name__" directory="output_dir" visible="true" format="netcdf"/>
        </collection>
    </outputs>
    <tests>
        <test>
            <param name="inputdata" value="inputdata_test.tar" />
            <param name="casename" value="test" />
            <param name="resolution" value="1x1_ALP1" />
            <param name="run_startdate" value="2000-01-01" />
            <param name="stop_option" value="nsteps" />
            <param name="stopn" value="1" />
            <output name="atm_log" ftype="txt">
              <assert_contents>
                  <has_text text="(datm_comp_final) atm: end of main integration loop" />
              </assert_contents>
            </output>
            <output name="cesm_log" ftype="txt">
              <assert_contents>
                  <has_text text="pes participating in computation for CLM" />
              </assert_contents>
            </output>
            <output name="cpl_log" ftype="txt">
              <assert_contents>
                  <has_text text="SUCCESSFUL TERMINATION" />
              </assert_contents>
            </output>
            <output name="lnd_log" ftype="txt">
              <assert_contents>
                  <has_text text="Successfully" />
              </assert_contents>
            </output>
            <output name="rof_log" ftype="txt">
              <assert_contents>
                  <has_text text="MOSART model initialization" />
              </assert_contents>
            </output>
            <output name="restart" ftype="tar" file="restart.tar" compare="sim_size" delta="100" />
            <output name="rinfo" ftype="txt">
              <assert_contents>
                  <has_text text="datm.r.2000-01-01-01800.nc" />
                  <has_text text="datm.rs1.2000-01-01-01800.bin" />
                  <has_text text="cpl.r.2000-01-01-01800.nc" />
                  <has_text text="clm2.r.2000-01-01-01800.nc" />
              </assert_contents>
            </output>
            <output_collection name="history_files" count="0">
            </output_collection>
        </test>
        <test>
            <param name="inputdata" value="inputdata_test.tar" />
            <param name="casename" value="one_month" />
            <param name="resolution" value="1x1_ALP1" />
            <param name="stop_option" value="nmonths" />
            <param name="stopn" value="1" />
            <output name="atm_log" ftype="txt">
              <assert_contents>
                  <has_text text="(datm_comp_final) atm: end of main integration loop" />
              </assert_contents>
            </output>
            <output name="cesm_log" ftype="txt">
              <assert_contents>
                  <has_text text="pes participating in computation for CLM" />
              </assert_contents>
            </output>
            <output name="cpl_log" ftype="txt">
              <assert_contents>
                  <has_text text="SUCCESSFUL TERMINATION" />
              </assert_contents>
            </output>
            <output name="lnd_log" ftype="txt">
              <assert_contents>
                  <has_text text="Successfully" />
              </assert_contents>
            </output>
            <output name="rof_log" ftype="txt">
              <assert_contents>
                  <has_text text="MOSART model initialization" />
              </assert_contents>
            </output>
            <output name="restart" ftype="tar">
              <assert_contents>
                  <has_size value="6348800" delta="5000"/>
              </assert_contents>
            </output>
         
            <output name="rinfo" ftype="txt">
              <assert_contents>
                  <has_text text="datm.r.2000-02-01-00000.nc" />
                  <has_text text="datm.rs1.2000-02-01-00000.bin" />
                  <has_text text="cpl.r.2000-02-01-00000.nc" />
                  <has_text text="clm2.r.2000-02-01-00000.nc" />
              </assert_contents>
            </output>
            <output_collection name="history_files" count="1">
            </output_collection>
        </test>

    </tests>
    <help><![CDATA[

**The Community Earth System Model (CESM)**
==========================================================================

This tool creates and runs CESM experiments from CESM supported release.
CESM is a fully-coupled, community, global climate model that provides state-of-the-art computer simulations of the Earth's past, present, and future climate states.

Available component configurations and grids:
----------------------------------------------
	    - `Grid Resolutions <https://www.cesm.ucar.edu/models/cesm2/config/2.1.3/grids.html>`_
	    - `Component Sets <https://www.cesm.ucar.edu/models/cesm2/config/2.1.3/compsets.html>`_
	    - `Component Configuration Settings <https://www.cesm.ucar.edu/models/cesm2/settings/2.1.3/>`_
    ]]></help>
    <citations>

    </citations>
    <edam_topics>
      <edam_topic>topic_3855</edam_topic>
      <edam_topic>topic_3318</edam_topic>
      <edam_topic>topic_3050</edam_topic>
      <edam_topic>topic_0610</edam_topic>
    </edam_topics>
    <edam_operations>
      <edam_operation>operation_3946</edam_operation>
      <edam_operation>operation_2426</edam_operation>
    </edam_operations>
</tool>
